# find top-size files in the current directory w. an optional arg. to limit the output
#
# usage
# a. ducks
# b. ducks 20
#
function ducks() {
  number_of_files_to_display=${1:-10}
  number_of_files_to_display=$((number_of_files_to_display+1))

  du -cms * | sort -rn | head -n $number_of_files_to_display
}

# copy current path
#
# usage
# a.
#   ccp
#   switch terminal window
#   CTRL + V
#
function ccp() {
  pwd | pbcopy
}

function take() {
  mkdir -p "$1"
  cd "$1"
}

# kill the process by name
#
# usage
# a.
#   kil skype
function kil() {
  ps ax | grep -i $1 | cut -d ' ' -f 1 | xargs kill -9
}

# git clone from github
function ghbcln() {
  git clone git://github.com/$1/$2.git
}

# setup a tracking branch from [remote] [branch_name]
function gbt() {
  git branch --track $2 $1/$2 && git checkout $2
}

function markdown() {
  /Applications/TextMate.app/Contents/SharedSupport/Support/bin/Markdown.pl $1 > $1.html
}

# nginx
function nginx_stop() {
  kil nginx
}
function nginx_start() {
  sudo /opt/nginx/sbin/nginx
}

# print system information
function psysinfo() {
  echo ' '
  echo '---------------------------------'
  echo '- S E R V E R -'
  echo '---------------------------------'
  echo ' '
  echo "Network node hostname : `uname -n`"
  echo "Machine hardware name : `uname -m`"
  echo "Operating system      : `uname -o`"
  echo "Kernel name           : `uname -s`"
  echo "Kernel version        : `uname -v`"
  echo "Kernel release        : `uname -r`"
  echo "Processor Type        : `uname -p`"
  echo "Hardware Platform     : `uname -i`"
  echo ' '
  echo '---------------------------------'
  echo '- M E M O R Y -'
  echo '---------------------------------'
  echo ' '
  cat /proc/meminfo | grep MemTotal
  echo ' '
  echo '---------------------------------'
  echo '- P R O C E S S O R S -'
  echo '---------------------------------'
  echo ' '
  cat /proc/cpuinfo | grep 'model name'| nl
  echo ' '
  echo '---------------------------------'
  echo '- D I S K S P A C E -'
  echo '---------------------------------'
  echo ' '
  df -h
  echo ' '
}
